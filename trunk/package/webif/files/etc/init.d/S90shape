#!/bin/sh
# Copyright (c) 2006 David Bird <dbird@acm.org>

. /etc/functions.sh
. /etc/functions-net.sh

NOT_SHAPED=$(nvram get shape_not_shaped)

# in percentage
DEF_RATE0=5
DEF_RATE1=29
DEF_RATE2=50
DEF_RATE3=15
DEF_RATE4=1

# in bytes
DEF_QUANT0=7500
DEF_QUANT1=6000
DEF_QUANT2=4500
DEF_QUANT3=3000
DEF_QUANT4=1500

# in kbit
RATEUP=${shape_rate_up:-$(nvram get shape_rate_up)}
RATEUP=${RATEUP:-0}
RATEDN=${shape_rate_dn:-$(nvram get shape_rate_dn)}
RATEDN=${RATEDN:-0}

DEF_CEIL_UP0=$(expr $RATEUP '*' 25 / 100)
DEF_CEIL_UPX=$(expr $RATEUP '*' 90 / 100)
DEF_CEIL_UP1=$DEF_CEIL_UPX
DEF_CEIL_UP2=$DEF_CEIL_UPX
DEF_CEIL_UP3=$DEF_CEIL_UPX
DEF_CEIL_UP4=$DEF_CEIL_UPX
DEF_CEIL_DN0=$(expr $RATEDN '*' 25 / 100)
DEF_CEIL_DNX=$(expr $RATEDN '*' 90 / 100)
DEF_CEIL_DN1=$DEF_CEIL_DNX
DEF_CEIL_DN2=$DEF_CEIL_DNX
DEF_CEIL_DN3=$DEF_CEIL_DNX
DEF_CEIL_DN4=$DEF_CEIL_DNX

DEF_FILTER_UP3="-p tcp -m multiport --dport 110,143,993"
DEF_FILTER_DN3="-p tcp -m multiport --sport 110,143,993"


for n in 0 1 2 3 4; do
    for d in UP DN; do
	l=$(echo $d | tr 'A-Z' 'a-z')
	eval "RATE_$d$n=\${shape_rate_$l$n:-\$(nvram get shape_rate_$l$n)}
              RATE_$d$n=\${RATE_$d$n:-\$DEF_RATE$n}
	      CEIL_$d$n=\${shape_ceil_$l$n:-\$(nvram get shape_ceil_$l$n)}
              CEIL_$d$n=\${CEIL_$d$n:-\$DEF_CEIL_$d$n}
              QUANTUM_$d$n=\${shape_qntm_$l$n:-\$(nvram get shape_qntm_$l$n)}
              QUANTUM_$d$n=\${QUANTUM_$d$n:-\$DEF_QUANT$n}
              FILTER_$d$n=\${shape_filt_$l$n:-\$(nvram get shape_filt_$l$n)}
              FILTER_$d$n=\${FILTER_$d$n:-\$DEF_FILTER_$d$n}
              FILTER_SEQ_$d$n=\${shape_fseq_$l$n:-\$(nvram get shape_fseq_$l$n)}
              FILTER_SEQ_$d$n=\${FILTER_SEQ_$d$n:-$(expr $n '+' 1)}"
    done
done

IFUP=$(nvram get wan_ifname)
IFUP=${IFUP:-vlan1}
IFDN=$(nvram get lan_ifname)
IFDN=${IFDN:-br0}

REAL_IFUP=$IFUP
REAL_IFDN=$IFDN
IFUP=imq0
IFDN=imq1

#MODULES="ipt_IMQ ipt_tos ipt_length ipt_limit ipt_mask \
#  ipt_conntrack ipt_CONNMARK ipt_ipp2p ipt_LOG \
#  sch_htb sch_sfq cls_fw"

MODULES="ipt_IMQ ipt_tos ipt_length ipt_limit ipt_mask ipt_layer7 ipt_ipp2p sch_htb sch_sfq cls_fw"

RETVAL=0


shape_status() {
    [ "$1" = "" ] || [ "$1" = "qdisc" ] && {
	echo "[qdisc][up-link]"
	tc -s qdisc ls dev $IFUP
	echo "[down-link]"
	tc -s qdisc ls dev $IFDN
    }
    [ "$1" = "" ] || [ "$1" = "class" ] && {
	echo "[class][up-link]"
	tc -s class ls dev $IFUP
	echo "[down-link]"
	tc -s class ls dev $IFDN
    }
    [ "$1" = "" ] || [ "$1" = "iptables" ] && {
	echo "[iptables][up-link]"
	iptables -t mangle -L SHAPER-OUT -v -x -n
	echo "[down-link]"
	iptables -t mangle -L SHAPER-IN -v -x -n
    }
}

shape_stop() {
    tc qdisc del dev $IFDN root 2>&-
    tc qdisc del dev $IFUP root 2>&-

    ip link set imq0 down 2>&-
    ip link set imq1 down 2>&-

    iptables -t mangle -D POSTROUTING -o $REAL_IFUP -j IMQ --todev 0 2>&-
    iptables -t mangle -D PREROUTING  -i $REAL_IFUP -j IMQ --todev 1 2>&-
    iptables -t mangle -D POSTROUTING -o $REAL_IFUP -j SHAPER-OUT 2>&-
    iptables -t mangle -D PREROUTING  -i $REAL_IFUP -j SHAPER-IN 2>&-

    iptables -t mangle -F SHAPER-OUT 2>&-
    iptables -t mangle -F SHAPER-IN 2>&-
    iptables -t mangle -X SHAPER-OUT 2>&-
    iptables -t mangle -X SHAPER-IN 2>&-

    rmmod imq 2>&-
}

LABEL_0="Highest"
LABEL_1="High"
LABEL_2="Standard"
LABEL_3="Low"
LABEL_4="Bulk"

set_shaping() {
    d=$1
    defclass=$2
    eval "dev=\$IF$d
          devrate=\$RATE$d"
    for n in 0 1 2 3 4; do 
	eval "r$n=\$RATE_$d$n
	      c$n=\$CEIL_$d$n
	      q$n=\$QUANTUM_$d$n"
    done
    tc qdisc add dev $dev root handle 1: htb default $defclass
    tc class add dev $dev parent 1: classid 1:1 htb rate ${devrate}kbit
    (
	newcls() {
	    eval "l=\$LABEL_$1"
	    rate=$(expr $devrate '*' $3 / 100)
	    ceil=$4
	    [ "$rate" = "0" ] && rate=1
	    echo "Creating $d-SHAPER Priority:$l($1) Rate:${rate}kbit Ceil:${ceil}kbit Quant:$5"
	    tc class  add dev $dev parent 1:1 classid 1:1$1 htb rate ${rate}kbit ceil ${ceil}kbit prio $2 quantum $5
	    tc qdisc  add dev $dev parent 1:1$1 handle 1$1: sfq perturb 10 quantum $5
	    tc filter add dev $dev parent 1:0 prio $1 protocol ip handle 1$1 fw flowid 1:1$1
	}
	newcls 0 0 $r0 $c0 $q0 # 0 - highest priority, overhead, monitoring
	newcls 1 1 $r1 $c1 $q1 # 1 - high priority, interactive traffic
	newcls 2 2 $r2 $c2 $q2 # 2 - medium priority, general traffic
	newcls 3 3 $r3 $c3 $q3 # 3 - low priority traffic
	newcls 4 3 $r4 $c4 $q4 # 4 - bulk traffic
    )
}

shape_ip() {
    ip=$1
    ceil_up=$2
    ceil_dn=$3
    # what now?
}

shape_start() {
    for m in $MODULES; do insmod $m 2>&-; done
    insmod imq numdevs=2   

    set_shaping UP 14
    set_shaping DN 12

    iptables -t mangle -N SHAPER-IN
    iptables -t mangle -N SHAPER-OUT

    for s in $NOT_SHAPED; do
	iptables -t mangle -A SHAPER-OUT -d $s -j RETURN
	iptables -t mangle -A SHAPER-IN -s $s -j RETURN
    done

    iptUP () {
	c="$1"; shift
	iptables -t mangle -A SHAPER-OUT $* -j MARK --set-mark 1$c
	iptables -t mangle -A SHAPER-OUT $* -j RETURN
    }
    iptDN () {
	c="$1"; shift
	iptables -t mangle -A SHAPER-IN  $* -j MARK --set-mark 1$c
	iptables -t mangle -A SHAPER-IN  $* -j RETURN
    }
    iptBI () {
	iptUP $*
	iptDN $*
    }

    iptfilt () {
	eval $(echo $3 | awk -v "d=$1" -v "p=$2" 'BEGIN { RS=";" } { print "ipt"d, p, $0 }')
    }

    iptBI 1 -p tcp -m tos --tos Minimize-Delay
    iptBI 4 -p tcp -m tos --tos Minimize-Cost 

    iptBI 0 -p icmp -m length --length 0:1500 -m limit --limit 2/s --limit-burst 5 

    iptBI 0 -p tcp -m length --length 0:100 --syn 
    iptBI 0 -p tcp -m length --length 0:100 --tcp-flags ALL SYN,ACK 
    iptBI 0 -p tcp --tcp-flags ALL RST 
    iptBI 0 -p tcp --tcp-flags ALL ACK,RST 
    iptBI 0 -p tcp --tcp-flags ALL ACK,FIN 

    iptBI 1 -p tcp -m length --length 0:50 --tcp-flags SYN,RST,ACK ACK
    
    iptUP 1 -p udp --dport 53 
    iptDN 1 -p udp --sport 53 

    iptUP 1 -p tcp --dport 22 -m length --length :999
    iptDN 1 -p tcp --sport 22 -m length --length :999

    tmpfile=/tmp/shape_temp.$$
    for d in UP DN; do
	for n in 0 1 2 3 4; do
	    eval "seq=\$FILTER_SEQ_$d$n"
	    echo "$seq [ -n \"\$FILTER_$d$n\" ] && { iptfilt $d $n \"\$FILTER_$d$n\"; echo \"Filter $d: \$FILTER_$d$n\"; };" >> $tmpfile
	done
	eval $(sort -n $tmpfile|cut -d ' ' -f2-)
	rm -f $tmpfile
    done

    iptBI 5 -p tcp -m tos --tos Maximize-Throughput 
    iptBI 2 -p tcp -m tos --tos Normal-Service
    iptBI 2 -m mark --mark 0 # everything else
    
    iptables -t mangle -I POSTROUTING -o $REAL_IFUP -j IMQ --todev 0
    iptables -t mangle -I PREROUTING  -i $REAL_IFUP -j IMQ --todev 1
    
    ip link set $IFUP up
    ip link set $IFDN up
    
    iptables -t mangle -I POSTROUTING -o $REAL_IFUP -j SHAPER-OUT
    iptables -t mangle -I PREROUTING  -i $REAL_IFUP -j SHAPER-IN
}

case "$1" in
    start)
	shape_stop
	[ "$(nvram get shape_onboot)" = "on" ] || exit 0
	[ "$RATEUP" = "0" -o "$RATEDN" = "0" ] && {
	    echo "not configuring rate shaper for zero bandwidth"
	    exit 0
	}
	shape_start
	;;
    stop)
	shape_stop
	;;
    status)
	shape_status $2
	;;
esac
